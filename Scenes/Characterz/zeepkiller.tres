[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://b7wxbeb6pm846"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_u0c2c"]
default_input_values = [0, 0.0, 1, 0.75]
operator = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_frop2"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ky0ao"]
parameter_name = "size"
hint = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_yxybw"]
parameter_name = "screensize"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4rfw4"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sb7k6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_ov6me"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mqycp"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 2)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_bfng4"]
default_input_values = [0, 0.0, 1, 10.0, 2, 1e-05, 3, Vector3(1, 1, 1), 4, Vector3(1, 1, 1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_0hfr6"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pn7yr"]
operator = 6

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 screensize;
uniform float size : hint_range(0, 1);



void fragment() {
// Input:3
	vec2 n_out3p0 = SCREEN_UV;


// Vector2Parameter:2
	vec2 n_out2p0 = screensize;


// VectorOp:4
	vec2 n_out4p0 = n_out3p0 * n_out2p0;


// VectorOp:6
	vec2 n_in6p1 = vec2(2.00000, 2.00000);
	vec2 n_out6p0 = n_out2p0 / n_in6p1;


// Distance:5
	float n_out5p0 = distance(n_out4p0, n_out6p0);


// FloatParameter:12
	float n_out12p0 = size;


// VectorDecompose:8
	float n_out8p0 = n_out2p0.x;
	float n_out8p1 = n_out2p0.y;


// FloatOp:9
	float n_out9p0 = max(n_out8p0, n_out8p1);


// FloatOp:10
	float n_in10p1 = 0.75000;
	float n_out10p0 = n_out9p0 * n_in10p1;


	float n_out11p0;
// Remap:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_in11p3 = 0.00000;
	{
		float __input_range = n_in11p2 - n_in11p1;
		float __output_range = n_out10p0 - n_in11p3;
		n_out11p0 = n_in11p3 + __output_range * ((n_out12p0 - n_in11p1) / __input_range);
	}


	vec3 n_out7p0;
// If:7
	float n_in7p2 = 0.00001;
	vec3 n_in7p3 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in7p4 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in7p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out5p0 - n_out11p0) < n_in7p2)
	{
		n_out7p0 = n_in7p3;
	}
	else if(n_out5p0 < n_out11p0)
	{
		n_out7p0 = n_in7p5;
	}
	else
	{
		n_out7p0 = n_in7p4;
	}


// Output:0
	COLOR.a = n_out7p0.x;


}
"
graph_offset = Vector2(-102.437, 442.713)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(900, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeVec2Parameter_yxybw")
nodes/fragment/2/position = Vector2(-280, 320)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_4rfw4")
nodes/fragment/3/position = Vector2(-300, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_sb7k6")
nodes/fragment/4/position = Vector2(80, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDistance_ov6me")
nodes/fragment/5/position = Vector2(439.408, 209.141)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_mqycp")
nodes/fragment/6/position = Vector2(160, 400)
nodes/fragment/7/node = SubResource("VisualShaderNodeIf_bfng4")
nodes/fragment/7/position = Vector2(680, 220)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorDecompose_0hfr6")
nodes/fragment/8/position = Vector2(32.4837, 627.121)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_pn7yr")
nodes/fragment/9/position = Vector2(240, 640)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_u0c2c")
nodes/fragment/10/position = Vector2(460, 640)
nodes/fragment/11/node = SubResource("VisualShaderNodeRemap_frop2")
nodes/fragment/11/position = Vector2(840, 580)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatParameter_ky0ao")
nodes/fragment/12/position = Vector2(380, 800)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 5, 0, 2, 0, 6, 0, 6, 0, 5, 1, 5, 0, 7, 0, 7, 0, 0, 1, 2, 0, 8, 0, 8, 0, 9, 0, 8, 1, 9, 1, 9, 0, 10, 0, 10, 0, 11, 4, 11, 0, 7, 1, 12, 0, 11, 0)
